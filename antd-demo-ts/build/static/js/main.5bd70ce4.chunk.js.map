{"version":3,"sources":["logo.svg","actions.js","reducers.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","addTodo","text","type","toggleTodo","index","setVisibilityFilter","filter","SHOW_ALL","todoApp","combineReducers","visibilityFilter","state","action","todos","completed","map","todo","Object","assign","store","createStore","console","log","getState","unsubscribe","subscribe","dispatch","i","onClick","VisibleTodoList","connect","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAAe,G,MAAA,IAA0B,kC,6BCI5BA,EAAW,WACXC,EAAc,cACdC,EAAwB,wBAgB9B,SAASC,EAAQC,GACtB,MAAO,CAAEC,KAAML,EAAUI,QAGpB,SAASE,EAAWC,GACzB,MAAO,CAAEF,KAAMJ,EAAaM,SAGvB,SAASC,EAAoBC,GAClC,MAAO,CAAEJ,KAAMH,EAAuBO,UCvBxC,IAAQC,EDKI,WC8BZ,IAKeC,EALCC,YAAgB,CAC9BC,iBAlCF,WAAqD,IAA3BC,EAA0B,uDAAlBJ,EAAUK,EAAQ,uCAClD,OAAQA,EAAOV,MACb,KAAKH,EACH,OAAOa,EAAON,OAChB,QACE,OAAOK,IA8BXE,MA1BF,WAAoC,IAArBF,EAAoB,uDAAZ,GAAIC,EAAQ,uCACjC,OAAQA,EAAOV,MACb,KAAKL,EACH,MAAM,GAAN,mBACKc,GADL,CAEE,CACEV,KAAMW,EAAOX,KACba,WAAW,KAGjB,KAAKhB,EACH,OAAOa,EAAMI,KAAI,SAACC,EAAMZ,GACtB,OAAIA,IAAUQ,EAAOR,MACZa,OAAOC,OAAO,GAAIF,EAAM,CAC7BF,WAAYE,EAAKF,YAGdE,KAEX,QACE,OAAOL,M,OCvBTQ,EAAQC,YAAYZ,GAGxBa,QAAQC,IAAIH,EAAMI,YAIlB,IAAMC,EAAcL,EAAMM,WAAU,kBAAMJ,QAAQC,IAAIH,EAAMI,eAG5DJ,EAAMO,SAAS1B,EAAQ,wBACvBmB,EAAMO,SAAS1B,EAAQ,yBACvBmB,EAAMO,SAAS1B,EAAQ,sBACvBmB,EAAMO,SAASvB,EAAW,IAC1BgB,EAAMO,SAASvB,EAAW,IAG1BqB,IAWA,IAEIG,EAAG,EACDC,EAAQ,WACZT,EAAMO,SAASrB,EAAoBsB,OAoB/BE,EAAkBC,aAhBA,SAACnB,GAEvB,OADAU,QAAQC,IAAIX,GACL,CACLD,iBAAkBC,EAAMD,oBAaJoB,EAxBX,SAAC,GAAD,IAAEpB,EAAF,EAAEA,iBAAiBT,EAAnB,EAAmBA,KAAnB,OAAmC,gCAAMS,EAAN,KAA0BT,QAuD3D8B,MAxBf,WACE,OACE,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACA,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,oBAAGP,QAASA,EAAZ,kBACO,+CADP,0BAGA,mBACEI,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,cAACT,EAAD,CAAiB5B,KAAM,gBC9EhBsC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1Bb,M","file":"static/js/main.5bd70ce4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/*\r\n * action 类型\r\n */\r\n\r\nexport const ADD_TODO = 'ADD_TODO'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\r\n\r\n/*\r\n * 其它的常量\r\n */\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: 'SHOW_ALL',\r\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\n/*\r\n * action 创建函数\r\n */\r\n\r\nexport function addTodo(text) {\r\n  return { type: ADD_TODO, text }\r\n}\r\n\r\nexport function toggleTodo(index) {\r\n  return { type: TOGGLE_TODO, index }\r\n}\r\n\r\nexport function setVisibilityFilter(filter) {\r\n  return { type: SET_VISIBILITY_FILTER, filter }\r\n}","\r\nimport { combineReducers } from 'redux'\r\nimport {\r\n  ADD_TODO,\r\n  TOGGLE_TODO,\r\n  SET_VISIBILITY_FILTER,\r\n  VisibilityFilters\r\n} from './actions'\r\nconst { SHOW_ALL } = VisibilityFilters\r\n\r\nfunction visibilityFilter(state = SHOW_ALL, action) {\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nfunction todos(state = [], action) {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case TOGGLE_TODO:\r\n      return state.map((todo, index) => {\r\n        if (index === action.index) {\r\n          return Object.assign({}, todo, {\r\n            completed: !todo.completed\r\n          })\r\n        }\r\n        return todo\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst todoApp = combineReducers({\r\n  visibilityFilter,\r\n  todos\r\n})\r\n\r\nexport default todoApp","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { createStore } from 'redux'\r\nimport todoApp from './reducers'\r\nimport {\r\n  addTodo,\r\n  toggleTodo,\r\n  setVisibilityFilter,\r\n  VisibilityFilters\r\n} from './actions'\r\n\r\nlet store = createStore(todoApp)\r\n\r\n// 打印初始状态\r\nconsole.log(store.getState())\r\n\r\n// 每次 state 更新时，打印日志\r\n// 注意 subscribe() 返回一个函数用来注销监听器\r\nconst unsubscribe = store.subscribe(() => console.log(store.getState()))\r\n\r\n// 发起一系列 action\r\nstore.dispatch(addTodo('Learn about actions'))\r\nstore.dispatch(addTodo('Learn about reducers'))\r\nstore.dispatch(addTodo('Learn about store'))\r\nstore.dispatch(toggleTodo(0))\r\nstore.dispatch(toggleTodo(1))\r\n\r\n// 停止监听 state 更新\r\nunsubscribe()\r\ninterface Person {\r\n  visibilityFilter: string;\r\n  text: string;\r\n}\r\n\r\ninterface stateP {\r\n  visibilityFilter: string;\r\n  text: string;\r\n}\r\n\r\nconst Text = ({visibilityFilter,text}:Person)=>(<div>{visibilityFilter}  {text}</div>)\r\n\r\nlet i =1;\r\nconst onClick=()=>{\r\n  store.dispatch(setVisibilityFilter(i++));\r\n}\r\n\r\n\r\nconst mapStateToProps = (state:stateP) => {\r\n  console.log(state)\r\n  return {\r\n    visibilityFilter: state.visibilityFilter\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:any, ownProps:any) => {\r\n  return {\r\n    onClick: () => {\r\n      dispatch(setVisibilityFilter(ownProps.filter))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst VisibleTodoList = connect(\r\n  mapStateToProps,\r\n  // mapDispatchToProps\r\n)(Text)\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p onClick={onClick}>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n        <VisibleTodoList text={'222'}/>\r\n      </header>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n// import { render } from 'react-dom'\r\n// import { Provider } from 'react-redux'\r\n// import { createStore } from 'redux'\r\n// import todoApp from './reducers'\r\n// import App from './components/App'\r\n\r\n// let store = createStore(todoApp)\r\n\r\n// render(\r\n//   <Provider store={store}>\r\n//     <App />\r\n//   </Provider>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n"],"sourceRoot":""}